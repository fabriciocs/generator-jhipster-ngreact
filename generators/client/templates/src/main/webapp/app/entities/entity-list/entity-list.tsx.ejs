
 Copyright 2013-2024 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import {
  Button,
  Table,
  TableHead,
  TableRow,
  TableCell,
  TableBody,
  Container,
  Typography,
  IconButton,
} from '@mui/material';
import { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';
import { useAppDispatch, useAppSelector } from 'app/config/store';
import { getEntities } from './<%= entityFileName %>.reducer';

export const <%= entityReactName %> = () => {
  const dispatch = useAppDispatch();
  const navigate = useNavigate();

  const <%= entityInstance %>List = useAppSelector(state => state.<%= entityReactState %>.entities);
  const loading = useAppSelector(state => state.<%= entityReactState %>.loading);

  useEffect(() => {
    dispatch(getEntities({}));
  }, []);

  return (
    <Container>
      <Typography variant="h4" gutterBottom>
        <Translate contentKey="<%= i18nKeyPrefix %>.home.title"><%= entityClassPluralHumanized %></Translate>
      </Typography>
      <Button
        variant="contained"
        color="primary"
        startIcon={<AddIcon />}
        onClick={() => navigate('/<%= entityPage %>/new')}
      >
        <Translate contentKey="<%= i18nKeyPrefix %>.home.createLabel">Create new <%= entityClassHumanized %></Translate>
      </Button>
      <Table>
        <TableHead>
          <TableRow>
            <%_ for (field of fields) { _%>
            <TableCell>
              <Translate contentKey="<%= `${i18nKeyPrefix}.${field.fieldName}` %>"><%= field.fieldNameHumanized %></Translate>
            </TableCell>
            <%_ } _%>
            <TableCell />
          </TableRow>
        </TableHead>
        <TableBody>
          {<%= entityInstance %>List.map((<%= entityInstance %>, i) => (
            <TableRow key={`entity-${i}`}>
              <%_ for (field of fields) { _%>
              <TableCell>
                {<%= entityInstance %>.<%= field.fieldName %>}
              </TableCell>
              <%_ } _%>
              <TableCell align="right">
                <IconButton
                  color="primary"
                  component={Link}
                  to={`/<%= entityPage %>/${<%= entityInstance %>.<%= primaryKey.name %>}/edit`}
                >
                  <EditIcon />
                </IconButton>
                <IconButton
                  color="secondary"
                  component={Link}
                  to={`/<%= entityPage %>/${<%= entityInstance %>.<%= primaryKey.name %>}/delete`}
                >
                  <DeleteIcon />
                </IconButton>
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </Container>
  );
};

export default <%= entityReactName %>;
